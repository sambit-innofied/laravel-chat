version: "3.8"

services:
  # PHP Service
  php:
    build:
      context: .
      target: php
      args:
        APP_ENV: ${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=app
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "8000:8000"
    depends_on:
      - Database
      - redis

  # Database Server
  Database:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: chatapp
      MYSQL_ROOT_PASSWORD: "innofied"
    volumes:
      - db-data:/var/lib/mysql

  # Redis Server
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    # comment out ports if not needed externally
    ports:
      - "6379:6379"

    
  queue:
     build:
      context: .
      target: php
      args:
        APP_ENV: ${APP_ENV}
     environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=queue
     working_dir: /var/www
     volumes:
        - ./:/var/www

  # websockets Service
  websocket:
    build:
      context: .
      target: php
      args:
        APP_ENV: ${APP_ENV}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=websocket
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "6001:6001"
    depends_on:
      - Database
      - redis

  #Node Server
  node:
   build:
    context: .
    target: node
   volumes:
    - .:/usr/src
    - ./node_modules:/usr/src/node_modules
   tty: true

volumes:
  db-data: ~
